Trabalhando com datas
Existem diversas funçoes em Pyspark para manipular datas e timestamp.
Evite escrever suas próprias funçoes para isso.
Algumas funcoes mais usadas:
current_day():
date_format(dateExpr,format):
to_date():
to_date(column, fmt):
add_months(Column, numMonths):
date_add(column, days):
date_sub(column, days):
datediff(end, start)
current_timestamp():
hour(column):
Last execution failed
71
71
12
# imprime o dataframe
df.show()
2 minutes ago (<1s)
72
72
# imprime o schema
df.printSchema()
root
 |-- InvoiceNo: string (nullable = true)
 |-- StockCode: string (nullable = true)
 |-- Description: string (nullable = true)
 |-- Quantity: integer (nullable = true)
 |-- InvoiceDate: timestamp (nullable = true)
 |-- UnitPrice: double (nullable = true)
 |-- CustomerID: double (nullable = true)
 |-- Country: string (nullable = true)

2 minutes ago (1s)
73
73
from pyspark.sql.functions import *
#current_date() = imprime
df.select(current_date().alias("current_date")).show(1)
(1) Spark Jobs
 
+------------+
|current_date|
+------------+
|  2024-08-09|
+------------+
only showing top 1 row

1 minute ago (1s)
74
74
# formata valores de data
df.select(col("InvoiceDate"), \
          date_format(col("InvoiceDate"), "dd/MM/yyyy hh:mm:ss")\
          .alias("Formato Brasil")).show()
(1) Spark Jobs
 
+-------------------+-------------------+
|        InvoiceDate|     Formato Brasil|
+-------------------+-------------------+
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:26:00|01/12/2010 08:26:00|
|2010-12-01 08:28:00|01/12/2010 08:28:00|
|2010-12-01 08:28:00|01/12/2010 08:28:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
|2010-12-01 08:34:00|01/12/2010 08:34:00|
+-------------------+-------------------+
only showing top 20 rows

1 minute ago (1s)
75
75
# imprime a diferença entre duas datas
df.select(col("InvoiceDate"),
    datediff(current_date(),col("InvoiceDate")).alias("datediff")  
  ).show()
(1) Spark Jobs
 
+-------------------+--------+
|        InvoiceDate|datediff|
+-------------------+--------+
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:26:00|    5000|
|2010-12-01 08:28:00|    5000|
|2010-12-01 08:28:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
|2010-12-01 08:34:00|    5000|
+-------------------+--------+
only showing top 20 rows

1 minute ago (1s)
76
76
# meses entre datas
df.select(col("InvoiceDate"), 
    months_between(current_date(),col("InvoiceDate")).alias("months_between")  
  ).show()
(1) Spark Jobs
 
+-------------------+--------------+
|        InvoiceDate|months_between|
+-------------------+--------------+
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:26:00|  164.24672939|
|2010-12-01 08:28:00|  164.24668459|
|2010-12-01 08:28:00|  164.24668459|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
|2010-12-01 08:34:00|  164.24655018|
+-------------------+--------------+
only showing top 20 rows

1 minute ago (1s)
77
77
# Extrai ano, mës, próximo dia, dia da semana.
df.select(col("InvoiceDate"), 
     year(col("InvoiceDate")).alias("year"), 
     month(col("InvoiceDate")).alias("month"), 
     next_day(col("InvoiceDate"),"Sunday").alias("next_day"), 
     weekofyear(col("InvoiceDate")).alias("weekofyear") 
  ).show()
(1) Spark Jobs
 
+-------------------+----+-----+----------+----------+
|        InvoiceDate|year|month|  next_day|weekofyear|
+-------------------+----+-----+----------+----------+
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:26:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:28:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:28:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
|2010-12-01 08:34:00|2010|   12|2010-12-05|        48|
+-------------------+----+-----+----------+----------+
only showing top 20 rows

just now (1s)
78
78
# Dia da semana, dia do mës, dias do ano
df.select(col("InvoiceDate"),  
     dayofweek(col("InvoiceDate")).alias("dayofweek"), 
     dayofmonth(col("InvoiceDate")).alias("dayofmonth"), 
     dayofyear(col("InvoiceDate")).alias("dayofyear"), 
  ).show()
(1) Spark Jobs
 
+-------------------+---------+----------+---------+
|        InvoiceDate|dayofweek|dayofmonth|dayofyear|
+-------------------+---------+----------+---------+
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:26:00|        4|         1|      335|
|2010-12-01 08:28:00|        4|         1|      335|
|2010-12-01 08:28:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
|2010-12-01 08:34:00|        4|         1|      335|
+-------------------+---------+----------+---------+
only showing top 20 rows

just now (<1s)
79
79
# imprime o timestamp atual
df.select(current_timestamp().alias("current_timestamp")
  ).show(1,truncate=False)
(1) Spark Jobs
 
+-----------------------+
|current_timestamp      |
+-----------------------+
|2024-08-09 02:05:24.069|
+-----------------------+
only showing top 1 row

just now (1s)
80
80
# retorna hora, minuto e segundo
df.select(col("InvoiceDate"), 
    hour(col("InvoiceDate")).alias("hour"), 
    minute(col("InvoiceDate")).alias("minute"),
    second(col("InvoiceDate")).alias("second") 
  ).show()
(1) Spark Jobs
 
+-------------------+----+------+------+
|        InvoiceDate|hour|minute|second|
+-------------------+----+------+------+
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:26:00|   8|    26|     0|
|2010-12-01 08:28:00|   8|    28|     0|
|2010-12-01 08:28:00|   8|    28|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
|2010-12-01 08:34:00|   8|    34|     0|
+-------------------+----+------+------+
only showing top 20 rows
